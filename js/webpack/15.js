module.exports = 'precision highp float;\nprecision highp int;\n\n#include <common>\n\nuniform vec2 ripplePos;\nuniform float rippleSize;\nuniform float viscosity;\nuniform float rippleImpact;\nuniform sampler2D heightmap;\n\n#define deltaTime ( 1.0 / 60.0 )\n#define GRAVITY_CONSTANT ( resolution.x * deltaTime * 1.0 )\n\nvoid main()\t{\n\n\tvec2 cellSize = 1.0 / resolution.xy;\n\n\tvec2 uv = gl_FragCoord.xy * cellSize;\n\n\t// heightmapValue.x == height\n\t// heightmapValue.y == velocity\n\t// heightmapValue.z, heightmapValue.w not used\n\tvec4 heightmapValue = texture2D( heightmap, uv );\n\n\t// Get neighbours\n\tfloat north = texture2D( heightmap, uv + vec2( 0.0, cellSize.y ) ).r;\n\tfloat south = texture2D( heightmap, uv + vec2( 0.0, - cellSize.y ) ).r;\n\tfloat east = texture2D( heightmap, uv + vec2( cellSize.x, 0.0 ) ).r;\n\tfloat west = texture2D( heightmap, uv + vec2( - cellSize.x, 0.0 ) ).r;\n\n\tfloat sump = north + south + east + west - 4.0 * heightmapValue.x;\n\n\tfloat accel = sump * GRAVITY_CONSTANT;\n\n\t// Dynamics\n\theightmapValue.y += accel;\n\theightmapValue.x += heightmapValue.y * deltaTime;\n\n\t// Viscosity\n\theightmapValue.x += sump * viscosity;\n\n\t// Mouse influence\n\tfloat mousePhase = clamp( \n\t\tlength(( uv - vec2( 0.5 ) ) * BOUNDS - vec2( ripplePos.x, - ripplePos.y ) ) * PI / rippleSize, \n\t\t0.0, \n\t\tPI\n\t);\n\theightmapValue.x += (cos( mousePhase ) + 1.0) * rippleImpact;\n\n\t// Bring X back to 0 over time to prevent endless growth\n\theightmapValue.x *= 0.998;\n\n\t// gl_FragColor = vec4(heightmapValue.x, 0.0, 0.0, 1.0);\n\tgl_FragColor = heightmapValue;\n}';